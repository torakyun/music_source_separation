# Auxiliary Loss
l1:
  lambda: 1

mse:
  lambda: 0

mag:
  lambda: 0
  params:
    fft_sizes: [1024, 2048, 512] # List of FFT size for STFT-based loss.
    hop_sizes: [120, 240, 50] # List of hop size for STFT-based loss
    win_lengths: [600, 1200, 240] # List of window length for STFT-based loss.
    window: "hann_window" # Window function for STFT-based loss

stft:
  lambda: 0
  params:
    fft_sizes: [1024, 2048, 512] # List of FFT size for STFT-based loss.
    hop_sizes: [120, 240, 50] # List of hop size for STFT-based loss
    win_lengths: [600, 1200, 240] # List of window length for STFT-based loss.
    window: "hann_window" # Window function for STFT-based loss

mel:
  lambda: 0
  params:
    fs: 24000
    fft_size: 2048
    hop_size: 300
    win_length: 1200
    window: "hann"
    num_mels: 80
    fmin: 0
    fmax: 12000
    log_base: null

mfcc:
  lambda: 0
  params:
    sample_rate: 24000
    n_mfcc: 40
    dct_type: 2
    norm: "ortho"
    log_mels: false
    melkwargs:
      n_fft: 2048
      hop_length: 300
      win_length: 1200
      n_mels: 80
      f_min: 0
      f_max: 12000

# Adversarial Loss
adversarial:
  lambda: 0
  generator_params:
    average_by_discriminators: true # Whether to average loss by #discriminators.
    average_by_scales: false # Whether to average loss by #scales.
    loss_type: "mse"
  discriminator_params:
    average_by_discriminators: true # Whether to average loss by #discriminators.
    average_by_scales: false # Whether to average loss by #scales.
    loss_type: "mse"
  train_start_epoch: -1 # 30

feat_match:
  lambda: 0
  params:
    average_by_discriminators: true # Whether to average loss by #discriminators.
    average_by_scales: false # Whether to average loss by #scales.
    average_by_layers: false # Whether to average loss by #layers in each discriminator.
    include_final_outputs: false # Whether to include final outputs in feat match loss calculation.
